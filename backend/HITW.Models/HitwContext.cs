// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using HITW.Models.Entities;

#nullable disable

namespace HITW.Models
{
    public partial class HitwContext : DbContext
    {
        public HitwContext()
        {
        }

        public HitwContext(DbContextOptions<HitwContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Answer> Answer { get; set; }
        public virtual DbSet<Commitment> Commitment { get; set; }
        public virtual DbSet<Person> Person { get; set; }
        public virtual DbSet<Project> Project { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Submission> Submission { get; set; }
        public virtual DbSet<Theme> Theme { get; set; }
        public virtual DbSet<ThemeScore> ThemeScore { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Answer>(entity =>
            {
                entity.Property(e => e.Data)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.HasOne(d => d.Question)
                    .WithMany(p => p.Answer)
                    .HasForeignKey(d => d.QuestionId)
                    .HasConstraintName("FK_Question");

                entity.HasOne(d => d.ThemeScore)
                    .WithMany(p => p.Answer)
                    .HasForeignKey(d => d.ThemeScoreId)
                    .HasConstraintName("FK_ThemeScore");
            });

            modelBuilder.Entity<Commitment>(entity =>
            {
                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TargetDate).HasColumnType("date");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.Commitment)
                    .HasForeignKey(d => d.ProjectId)
                    .HasConstraintName("FK_Project_Commitment");
            });

            modelBuilder.Entity<Person>(entity =>
            {
                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Project>(entity =>
            {
                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.Project)
                    .HasForeignKey(d => d.PersonId)
                    .HasConstraintName("FK_Person");
            });

            modelBuilder.Entity<Question>(entity =>
            {
                entity.Property(e => e.Data)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Theme)
                    .WithMany(p => p.Question)
                    .HasForeignKey(d => d.ThemeId)
                    .HasConstraintName("FK_Theme");
            });

            modelBuilder.Entity<Submission>(entity =>
            {
                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.HasOne(d => d.Commitment)
                    .WithMany(p => p.Submission)
                    .HasForeignKey(d => d.CommitmentId)
                    .HasConstraintName("FK_Commitment");
            });

            modelBuilder.Entity<Theme>(entity =>
            {
                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ThemeScore>(entity =>
            {
                entity.HasOne(d => d.Project)
                    .WithMany(p => p.ThemeScore)
                    .HasForeignKey(d => d.ProjectId)
                    .HasConstraintName("FK_Project_ThemeScore");

                entity.HasOne(d => d.Theme)
                    .WithMany(p => p.ThemeScore)
                    .HasForeignKey(d => d.ThemeId)
                    .HasConstraintName("FK_Theme_ThemeScore");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}